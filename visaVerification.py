# Generated by Selenium IDE
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager

class TestVisaVerification():
  def setup_method(self, method):
    options = Options()
#     options.add_argument('--headless')
#     options.add_argument('--disable-gpu')
    self.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), chrome_options=options)
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_visaVerification(self):
#     try:
        # Test name: Visa Verification
        # Step # | name | target | value
        # 1 | open | /es-ar/niv/users/sign_in |
        print('open site ðŸš€')
        self.driver.get("https://ais.usvisa-info.com/es-ar/niv/users/sign_in")
        # 2 | setWindowSize | 1512x871 |
#         self.driver.set_window_size(1512, 871)
        # 3 | type | id=user_email | reemplazar 'email' con el email real
        self.driver.find_element(By.ID, "user_email").send_keys("email")
        # 4 | type | id=user_password | reemplazar 'password' con el password real
        self.driver.find_element(By.ID, "user_password").send_keys("password")
        # 5 | click | css=.icheckbox |
        print('login ðŸš€')
        self.driver.find_element(By.CSS_SELECTOR, ".icheckbox").click()
        # 6 | click | name=commit |
        self.driver.find_element(By.NAME, "commit").click()
    #     # 7 | click | linkText=Continuar |
        self.driver.find_element(By.LINK_TEXT, "Continuar").click()
        # 8 | open | https://ais.usvisa-info.com/es-ar/niv/schedule/36229112/appointment |
        # self.driver.get("https://ais.usvisa-info.com/es-ar/niv/schedule/36229112/appointment")
        time.sleep(2)
        # 9 | click | id=appointments_asc_appointment_facility_id |

        self.driver.find_element(By.LINK_TEXT, "Reprogramar cita").click()
        # 10 | click | id=appointments_asc_appointment_date |
        time.sleep(2)
        reschedulerButton = self.driver.find_elements(By.LINK_TEXT, "Reprogramar cita")
        # print('ðŸš€',reschedulerButton)
        reschedulerButton[1].click()
        # self.driver.find_element(By.CSS_SELECTOR, "a.accordion-title").click()

        print('Select new date to Consulate appoinment  ðŸš€')
        element = None
        while element == None:
            element = 'found'
            try:

                # 11 | click | css=.ui-icon-circle-triangle-e |
                self.driver.find_element(By.ID, "appointments_consulate_appointment_date").click()
                self.driver.find_element(By.CSS_SELECTOR, ".ui-icon-circle-triangle-e").click()
                # 12 | click | xpath=//td[@data-handler='selectDay']/a |
                self.driver.find_element(By.XPATH, "//td[@data-handler=\'selectDay\']/a").click()
            except:
                element = None
        # 13 | click | id=appointments_asc_appointment_time |
        
        print('Select new time to Consulate appoinment  ðŸš€')

        # self.driver.find_element(By.ID, "appointments_asc_appointment_time").click()
        self.driver.find_element(By.ID, "appointments_consulate_appointment_time_input").click()

        # 14 | select | id=appointments_asc_appointment_time | label=09:45
        # dropdown = Select(self.driver.find_element(By.ID, "appointments_asc_appointment_time"))

        dropdown = Select(self.driver.find_element(By.ID, "appointments_consulate_appointment_time"))
#         dropdown.find_element(By.XPATH, "//option[. = '09:45']").click()
        selected_time = None
        times = ['07:00', '07:15', '07:30', '07:45', '08:00', '08:15', '08:30', '08:45', '09:00','09:15','09:30','09:45','10:00','10:15','10:30','11:00','11:15','11:30','11:45','12:00']
        i = 0
        print('ðŸš€',dropdown)
        print(dropdown.select_by_value('08:30'))
        print(dropdown.select_by_value(times[1]))
        print(dropdown.select_by_value(times[2]))
        print(dropdown.select_by_value(times[3]))

        while selected_time == None:
            selected_time = 'true'
            try:
                dropdown.select_by_value(times[i]).click()
            except:
                selected_time = None
                i+=1
#     except:
#         print('Hello')
#         self.teardown_method

obj = TestVisaVerification()
obj.setup_method('get')
obj.test_visaVerification()
# obj.teardown_method('get')

